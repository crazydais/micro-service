buildscript {
    ext {
        springBootVersion = '1.3.5.RELEASE'
    }
    repositories {
        mavenCentral()
    }
  
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot' 

springBoot {
    mainClass = 'github.crazydais.Application'
}

jar {
    baseName = 'microservice-basic'
    version = '0.0.1-SNAPSHOT'
    archiveName = "microservice.jar"
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

ext {
    secondvar = 2
}

if (!hasProperty('mainClass')) {
    ext.mainClass = 'github.crazydais.Application'
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-jdbc')
    compile('org.springframework.boot:spring-boot-starter-web')
    //compile('org.springframework.boot:spring-boot-starter-security')
    //compile('org.springframework.boot:spring-boot-starter-redis')
    compile('org.springframework.session:spring-session')
    compile('com.h2database:h2')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.testng:testng:6.9.10')
    testCompile('com.jayway.jsonpath:json-path:2.2.0')
}

eclipse {
    classpath {
        containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
        containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.12'
}

test {
    testLogging {
        events "PASSED", "STARTED", "FAILED", "SKIPPED"
    }
}

def int firstvar = 5

task doFirstThing () {
  
    doLast {
        firstvar = firstvar + 3
        println ("First Result: " + firstvar)
    }
}

task doSecondThing () {
  
    dependsOn doFirstThing
  
    doLast {
        secondvar = firstvar + secondvar
        println ("Second Result: " + secondvar)
    }
}

// http://trickyandroid.com/gradle-tip-3-tasks-ordering/
// https://docs.gradle.org/current/userguide/more_about_tasks.html
//doSecondThing.dependsOn {
//    tasks.findAll { task -> task.name.startsWith('doFirstThing') }
//}
